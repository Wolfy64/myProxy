# Javascript Node CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2.1

commands:
  checkout_and_restore_cache:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

executors:
  node:
    docker:
      - image: circleci/node:12.8.0
    working_directory: ~/circleci

jobs:
  install:
    executor: node
    steps:
      - checkout_and_restore_cache
      - run: npm run setup
      - persist_to_workspace:
          root: .
          paths:
            - .
      - save_cache:
          key: source-v1-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ./acme.sh
  lint:
    executor: node
    steps:
      - checkout_and_restore_cache
      - attach_workspace:
          at: ~/circleci
      - run: npm install
      - run: npm run prettier:write
  test:
    executor: node
    steps:
      - checkout_and_restore_cache
      - attach_workspace:
          at: ~/circleci
      - run: npm install
      - run: npm run test
  build:
    executor: node
    steps:
      - checkout_and_restore_cache
      - attach_workspace:
          at: ~/circleci
      - run: npm install
      - run: npm run build
      # working_directory: ~/repo
  # deploy:
  #     executor: node
  #     steps:
  #       # - add_ssh_keys:
  #       #     fingerprints:
  #       #     - "SHA256:vNQhUA1Pu0/mCPSWwZ623uUtmljAksV9B0zUg/DWMC0 ledavid64@gmail.com"
  #       - checkout_and_restore_cache
  #       - attach_workspace:
  #           at: ~/circleci
  #       - run: npm install
  #       - run: npm run build
  #       # - attach_workspace:
  #       #     at: ~/project
  #       - run:
  #           name: Deploy Over SSH ðŸš€
  #           command: ssh dev@167.71.153.58 "git pull master"
  #       - run: echo myProxy has been succesfully deployed ðŸŽ‰

workflows:
  version: 2
  integration:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
      - build:
          requires:
            - install
      # - deploy:
      #     requires:
      #       - build
      #       - lint
      #       - test
      #     filters:
      #       branches:
      #         only: master